#lang rosette
(require rosette/lib/synthax)

;;(error-print-width 100000000000)

(require "../dense-fjmodels.rkt")
(require "../densefjapi.rkt")
(require "../straightline.rkt")
(require "../benchmarks/thermostat.rkt")

(define (straightline-thermostat-graph tempB clockB)
  (define r1 tempB)
  (define r2 clockB)
  (define r3 (liftB1 (λ (t) (<= t 2)) r1))
  (define r4 (liftB1 (λ (c) (or (>= c 4) (>= 2 c))) r2))
  (define r5 (andB r3 r4))
  (define r6 (constantB 'on))
  (define r7 (constantB 'off))
  (define r8 (ifB r5 r6 r7))
  r8)

(define (small-graph tempB clockB)
  (define r1 tempB)
  (define r2 clockB)
  (define r3 (liftB1 (λ (t) (<= t 2)) r1))
  (define r4 (liftB1 (λ (c) (or (>= c 4) (>= 2 c))) r2))
  (define r5 (andB r3 r4))
  r5)

(define small-holes (for/list ([i (range 3)]) (get-insn-holes)))
(define-symbolic* small-retval-idx integer?)

(define (sk-small input1 input2)
  (define r1 input1)
  (define r2 input2)
  (define r3 (call-stream-insn (list-ref small-holes 0) (list r1 r2)))
  (define r4 (call-stream-insn (list-ref small-holes 1) (list r1 r2 r3)))
  (define r5 (call-stream-insn (list-ref small-holes 2) (list r1 r2 r3 r4)))
  (list-ref (list r1 r2 r3 r4 r5) small-retval-idx))

(define small-binding (time (synthesize #:forall (harvest s-tempB s-clockB)
                                        #:guarantee (assert (same small-graph sk-small
                                                                  s-tempB s-clockB)))))
(if (unsat? small-binding)
    (displayln "small graph unsat")
    (print-from-holes small-holes small-retval-idx small-binding 3 2))

(define (stream-insn-graph tempB clockB)
  (define r1 tempB)
  (define r2 clockB)
  (define r3 (call-stream-insn (stream-insn 5 0 1 0 0 0) (list r1 r2)))
  (define r4 (call-stream-insn (stream-insn 5 1 2 0 0 0) (list r1 r2 r3)))
  (define r5 (call-stream-insn (stream-insn 6 2 3 0 0 0) (list r1 r2 r3 r4)))
  (define r6 (call-stream-insn (stream-insn 8 0 0 0 0 0) (list r1 r2 r3 r4 r5)))
  (define r7 (call-stream-insn (stream-insn 8 0 1 0 0 0) (list r1 r2 r3 r4 r5 r6)))
  (define r8 (call-stream-insn (stream-insn 7 4 5 6 0 0) (list r1 r2 r3 r4 r5 r6 r7)))
  (list-ref (list r1 r2 r3 r4 r5 r6 r7 r8) 7))

(define v-binding (verify (assert (same straightline-thermostat-graph
                                        stream-insn-graph
                                        s-tempB s-clockB))))
(if (unsat? v-binding)
    (displayln "verified example implementation and straightline program are equivalent")
    (displayln "can't verify that straightline program matches example implementation"))

(define holes (for/list ([i (range 3)]) (get-insn-holes)))
(define-symbolic* retval-idx integer?)

(define (sk tempB clockB)
  (define r1 tempB)
  (define r2 clockB)
 ; (define r3 (liftB1 (λ (t) (<= t 2)) r1))
  (define r3 (call-stream-insn (list-ref holes 0) (list r1 r2)))
  (define r4 (liftB1 (λ (c) (or (>= c 4) (>= 2 c))) r2))
 ; (define r4 (call-stream-insn (list-ref holes 1) (list r1 r2 r3)))
  (define r5 (andB r3 r4))
 ; (define r5 (call-stream-insn (list-ref holes 1) (list r1 r2 r3 r4)))
  (define r6 (constantB 'on))
  (define r7 (constantB 'off))
;  (define r8 (call-stream-insn (list-ref holes 2) (list r1 r2 r3 r4 r5 r6 r7)))
  (define r8 (ifB r5 r6 r7))
  (list-ref (list r1 r2 r3 r4 r5 r6 r7 r8) retval-idx))

#;(define (sketch-graph input1 input2)
  (define r1 input1)
  (define r2 input2)
  (define r3 (call-stream-insn (list-ref holes 0) (list r1 r2)))
  (define r4 (call-stream-insn (list-ref holes 1) (list r1 r2 r3)))
  (define r5 (call-stream-insn (list-ref holes 2) (list r1 r2 r3 r4)))
  (define r6 (call-stream-insn (list-ref holes 3) (list r1 r2 r3 r4 r5)))
  (define r7 (call-stream-insn (list-ref holes 4) (list r1 r2 r3 r4 r5 r6)))
  (define r8 (call-stream-insn (list-ref holes 5) (list r1 r2 r3 r4 r5 r6 r7)))
  (list-ref (list r1 r2 r3 r4 r5 r6 r7 r8) retval-idx))

(sk s-tempB s-clockB)
;;(time (sketch-graph s-tempB s-clockB))
#;(define binding (time (synthesize #:forall (harvest s-tempB s-clockB)
                                  #:guarantee (assert (same straightline-thermostat-graph
                                                            sk
                                                            s-tempB s-clockB)))))

#;(if (unsat? binding)
    (displayln "unsat")
    (displayln "sat"))
    ;(print-from-holes holes retval-idx binding 2 2))